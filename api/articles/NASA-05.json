{"title":"NASA-05","uid":"c165b28ddb77cb95a6d1fb1bee49ab82","slug":"NASA-05","date":"2024-03-17T16:00:00.000Z","updated":"2024-04-17T09:35:07.394Z","comments":true,"path":"api/articles/NASA-05.json","keywords":null,"cover":[],"content":"<h1 id=\"NASA-hw5\"><a href=\"#NASA-hw5\" class=\"headerlink\" title=\"NASA hw5\"></a>NASA hw5</h1><h2 id=\"info\"><a href=\"#info\" class=\"headerlink\" title=\"info\"></a>info</h2><p>學號: 41173058h<br>學生: 鍾詠傑</p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><ul>\n<li>Lab 5Slides: <ul>\n<li><a href=\"https://docs.google.com/presentation/d/1MV_lMUDzkaDGnUFqYSm-p76lKQE4-ECJW5B_JE4_oww/edit#slide=id.g26ba0c57e7f_0_159\">https://docs.google.com/presentation/d/1MV_lMUDzkaDGnUFqYSm-p76lKQE4-ECJW5B_JE4_oww/edit#slide=id.g26ba0c57e7f_0_159</a></li>\n</ul>\n</li>\n<li>Minikube Documentation: <ul>\n<li><a href=\"https://minikube.sigs.k8s.io/docs/start/\">https://minikube.sigs.k8s.io/docs/start/</a></li>\n</ul>\n</li>\n<li>Ubuntu Console Configuration: <ul>\n<li><a href=\"https://blog.wataash.com/ubuntu_console/\">https://blog.wataash.com/ubuntu_console/</a></li>\n</ul>\n</li>\n<li>Manage Docker as a Non-root User: <ul>\n<li><a href=\"https://docs.docker.com/engine/install/linux-postinstall/\">https://docs.docker.com/engine/install/linux-postinstall/</a></li>\n</ul>\n</li>\n<li>Port Forwarding: <ul>\n<li><a href=\"https://stackoverflow.com/questions/47173463/how-to-access-local-kubernetes-minikube-dashboard-remotely\">https://stackoverflow.com/questions/47173463/how-to-access-local-kubernetes-minikube-dashboard-remotely</a></li>\n</ul>\n</li>\n<li>Kubernetes Dashboard: <ul>\n<li><a href=\"https://ithelp.ithome.com.tw/m/articles/10195385\">https://ithelp.ithome.com.tw/m/articles/10195385</a></li>\n</ul>\n</li>\n<li>Kubernetes Tutorial: <ul>\n<li><a href=\"https://blog.techbridge.cc/2018/12/01/kubernetes101-introduction-tutorial/\">https://blog.techbridge.cc/2018/12/01/kubernetes101-introduction-tutorial/</a></li>\n</ul>\n</li>\n<li>Translate a Docker Compose File to Kubernetes Resources: <ul>\n<li><a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/translate-compose-kubernetes/\">https://kubernetes.io/docs/tasks/configure-pod-container/translate-compose-kubernetes/</a></li>\n</ul>\n</li>\n<li>Tunneling Tools: <ul>\n<li><a href=\"https://tailscale.com/\">https://tailscale.com/</a></li>\n</ul>\n</li>\n<li>Helm Introduction: <ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10238998\">https://ithelp.ithome.com.tw/articles/10238998</a></li>\n</ul>\n</li>\n<li>Helm Chart Documentation: <ul>\n<li><a href=\"https://helm.sh/docs/\">https://helm.sh/docs/</a></li>\n</ul>\n</li>\n<li>Helm Chart for phpMyAdmin: <ul>\n<li><a href=\"https://artifacthub.io/packages/helm/bitnami/phpmyadmin\">https://artifacthub.io/packages/helm/bitnami/phpmyadmin</a></li>\n</ul>\n</li>\n<li>Helm Chart for MySQL: <ul>\n<li><a href=\"https://artifacthub.io/packages/helm/bitnami/mysql\">https://artifacthub.io/packages/helm/bitnami/mysql</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><ul>\n<li>Example 1: <ul>\n<li><a href=\"https://github.com/rzrokon/Docker-NGINX-PHP-MySQL-PhpMyadmin/tree/master\">https://github.com/rzrokon/Docker-NGINX-PHP-MySQL-PhpMyadmin/tree/master</a></li>\n</ul>\n</li>\n<li>Example 2: <ul>\n<li><a href=\"https://github.com/nanoninja/docker-nginx-php-mysql\">https://github.com/nanoninja/docker-nginx-php-mysql</a></li>\n</ul>\n</li>\n</ul>\n<div style=\"page-break-after:always;\"></div>\n\n<h1 id=\"Virsh\"><a href=\"#Virsh\" class=\"headerlink\" title=\"Virsh\"></a>Virsh</h1><h2 id=\"1-安裝VM\"><a href=\"#1-安裝VM\" class=\"headerlink\" title=\"1 安裝VM\"></a>1 安裝VM</h2><p>設定 ubuntu.qcow2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qemu-img create -f qcow2 -o cluster_size=2M ubuntu.qcow2 20G</span><br></pre></td></tr></table></figure>\n<p>新增一個 Virtual Machine</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virt-install \\</span><br><span class=\"line\">--name=41173058h \\</span><br><span class=\"line\">--vcpus=2 \\</span><br><span class=\"line\">--memory=8192 \\</span><br><span class=\"line\">--disk path=/tmp2/41173058h/nasahw5/ubuntu.qcow2,size=20 \\</span><br><span class=\"line\">--cdrom=ubuntu.iso \\</span><br><span class=\"line\">--os-variant=ubuntu20.04 \\</span><br><span class=\"line\">--network=default \\</span><br><span class=\"line\">--mac=52:54:00:17:30:58 \\</span><br><span class=\"line\">--console pty,target_type=serial \\</span><br><span class=\"line\">--graphics vnc,listen=0.0.0.0,password=0910  \\</span><br><span class=\"line\">--noautoconsole</span><br></pre></td></tr></table></figure>\n<p>暫時用vnc安裝linux<br><code>virsh vncdisplay 41173058h</code></p>\n<p>安裝完成後記得回到 host<br><code>virsh edit 41173058h</code><br>刪除安裝介質區塊<br>然後重新開機<code>virsh start 41173058h</code></p>\n<div style=\"page-break-after:always;\"></div>\n\n<h3 id=\"圖片\"><a href=\"#圖片\" class=\"headerlink\" title=\"圖片\"></a>圖片</h3><p>virsh list 的輸出畫面(右上)<br><img src=\"https://hackmd.io/_uploads/BkfA_VEkA.png\" alt=\"Termius - ws2.csie.ntu.edu.tw 2024_3_28 上午 02_29_34\"></p>\n<p>VM 內開機完成的畫面<br><img src=\"https://hackmd.io/_uploads/HkG7IEVkC.png\" alt=\"VM-HW05 (QEMU (41173058h)) - RealVNC Viewer 2024_3_29 下午 08_36_31\"></p>\n<p>VM 內登入後的畫面<br><img src=\"https://hackmd.io/_uploads/HkLFUNVk0.png\" alt=\"VM-HW05 (QEMU (41173058h)) - RealVNC Viewer 2024_3_29 下午 08_37_05\"></p>\n<p>VM 內執行 ip a 指令的輸出畫面<br><img src=\"https://hackmd.io/_uploads/Bkvs8VVkA.png\" alt=\"VM-HW05 (QEMU (41173058h)) - RealVNC Viewer 2024_3_29 下午 08_39_53\"></p>\n<p>失敗時刪除用指令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virsh shutdown 41173058h</span><br><span class=\"line\">virsh undefine 41173058h --remove-all-storage</span><br></pre></td></tr></table></figure>\n\n<div style=\"page-break-after:always;\"></div>\n\n<h2 id=\"2-開啟-serial-console-與-ssh\"><a href=\"#2-開啟-serial-console-與-ssh\" class=\"headerlink\" title=\"2 開啟 serial console 與 ssh\"></a>2 開啟 serial console 與 ssh</h2><p>enable console serial<br><a href=\"https://blog.wataash.com/ubuntu_console/\">https://blog.wataash.com/ubuntu_console/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/default/grub</span><br></pre></td></tr></table></figure>\n<p>進行以下操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## remove (optional):</span><br><span class=\"line\"># GRUB_TIMEOUT_STYLE=hidden</span><br><span class=\"line\"></span><br><span class=\"line\">## change:</span><br><span class=\"line\"># (optional)</span><br><span class=\"line\"># GRUB_TIMEOUT=0</span><br><span class=\"line\">GRUB_TIMEOUT=2</span><br><span class=\"line\"></span><br><span class=\"line\">## add:</span><br><span class=\"line\">GRUB_TERMINAL=&quot;console serial&quot;</span><br><span class=\"line\">GRUB_SERIAL_COMMAND=&quot;serial --speed=115200&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">## change:</span><br><span class=\"line\"># GRUB_CMDLINE_LINUX=&quot;&quot;</span><br><span class=\"line\">GRUB_CMDLINE_LINUX=&quot;console=tty1 console=ttyS0,115200&quot;</span><br></pre></td></tr></table></figure>\n<p>執行<code>sudo update-grub</code>後reboot<br>回到工作站</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virsh console 41173058h</span><br></pre></td></tr></table></figure>\n<p>整台都是工作站，但是左下為console serial<br><img src=\"https://hackmd.io/_uploads/SJpkhVNyA.png\" alt=\"Termius - ws2.csie.ntu.edu.tw 2024_3_28 上午 02_29_34\"></p>\n<h3 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h3><p>在安裝linux時就有安裝openssh 服務了<br>但是要對VM進行端口轉發，將某個 port 的 ssh 需求導向<br>VM</p>\n<p><a href=\"https://serverfault.com/a/352598\">https://serverfault.com/a/352598</a></p>\n<p>在工作站進行端口轉發</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virsh qemu-monitor-command --hmp 41173058h &#x27;hostfwd_add ::3636-:22&#x27;</span><br><span class=\"line\">ssh h41173058@ws2.csie.ntu.edu.tw -p 3636</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://hackmd.io/_uploads/SkqDhNNJA.png\" alt=\"Termius - NASA-hw5-VM 2024_3_29 下午 09_04_26\"><br><img src=\"https://hackmd.io/_uploads/rkRh2E4yR.png\" alt=\"Termius - NASA-hw5-VM 2024_3_29 下午 09_05_50\"></p>\n<div style=\"page-break-after:always;\"></div>\n\n<h1 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h1><h2 id=\"3-Docker-Set-Up\"><a href=\"#3-Docker-Set-Up\" class=\"headerlink\" title=\"3. Docker Set Up\"></a>3. Docker Set Up</h2><p>在安裝linux時就有安裝openssh 服務了<br>在這裡避免每次 Docker 都要 sudo<br>Manage Docker as a non-root user</p>\n<p><a href=\"https://docs.docker.com/engine/install/linux-postinstall/\">https://docs.docker.com/engine/install/linux-postinstall/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo groupadd docker</span><br><span class=\"line\">sudo usermod -aG docker $USER</span><br><span class=\"line\">newgrp docker</span><br><span class=\"line\"></span><br><span class=\"line\">docker run hello-world</span><br></pre></td></tr></table></figure>\n<p>如果未成功就reboot 即可生效</p>\n<h2 id=\"截圖\"><a href=\"#截圖\" class=\"headerlink\" title=\"截圖\"></a>截圖</h2><p>sudo docker version (左上)<br>與 sudo dockercompose version (左下)</p>\n<p><img src=\"https://hackmd.io/_uploads/BJI5PEV1R.png\" alt=\"Termius - NASA-hw5-VM 2024_3_29 下午 08_43_40\"></p>\n<div style=\"page-break-after:always;\"></div>\n\n<h2 id=\"Docker-Basics\"><a href=\"#Docker-Basics\" class=\"headerlink\" title=\"Docker Basics\"></a>Docker Basics</h2><h2 id=\"4-使用-Container-的時機：\"><a href=\"#4-使用-Container-的時機：\" class=\"headerlink\" title=\"4. 使用 Container 的時機：\"></a>4. 使用 Container 的時機：</h2><ul>\n<li>開發與測試環境的快速搭建和拆卸。</li>\n<li>微服務架構下的部署與擴展。</li>\n<li>持續集成&#x2F;持續交付 (CI&#x2F;CD) 流程中的自動化測試和部署。</li>\n<li>需要將應用程式與其相依性打包成獨立的單元。</li>\n</ul>\n<p>   使用 VM 而非 Container 的時機：</p>\n<ul>\n<li>需要完全隔離的環境，如安全性要求較高的應用程式。</li>\n<li>應用程式需要特定的作業系統環境，而非容器化的應用程式。</li>\n<li>需要運行不同作業系統的應用程式。</li>\n</ul>\n<div style=\"page-break-after:always;\"></div>\n\n<h1 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5.\"></a>5.</h1><p>在 Windows 和 macOS 上，container 的效能會比在 Linux 上差，主要原因是因為 Docker 在這些作業系統上需要透過額外的虛擬化層來執行，而這會增加一些額外的開銷，導致效能下降。例如，在 Windows 上，Docker Desktop 使用 Hyper-V 或 WSL 2 來執行 Linux container，而在 macOS 上，Docker Desktop 使用 HyperKit 虛擬機來執行 Linux container。這些額外的虛擬化層會增加系統資源的使用量，並可能導致效能下降。</p>\n<div style=\"page-break-after:always;\"></div>\n\n<h1 id=\"6\"><a href=\"#6\" class=\"headerlink\" title=\"6.\"></a>6.</h1><p>   (a) <code>docker stop $(docker ps -aq)</code><br>       - 此指令會停止所有正在運行的 container。<code>docker ps -aq</code> 用來列出所有 container 的 ID。</p>\n<p>   (b) <code>docker rmi $(docker images -aq)</code><br>       - 此指令會刪除所有的 image。<code>docker images -aq</code> 用來列出所有 image 的 ID。</p>\n<p>   (c) <code>docker system prune -af</code><br>       - 此指令會刪除所有未被使用的資源，包含 containers, networks, images 與 volume。</p>\n<p>   (d) <code>docker inspect -f &#39;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#39; 5b0f1ed0dcb8</code><br>       - 此指令會列出 container 的 IP。以提供的 Container ID 為例。</p>\n<p>   (e) <code>docker stats --all --format &quot;table &#123;&#123;.Container&#125;&#125;\\t&#123;&#123;.CPUPerc&#125;&#125;\\t&#123;&#123;.MemUsage&#125;&#125;&quot;</code><br>       - 此指令會即時查看當前所有 container 所使用的 CPU 與 Memory。</p>\n<div style=\"page-break-after:always;\"></div>\n   \n<h2 id=\"7-nginx\"><a href=\"#7-nginx\" class=\"headerlink\" title=\"7. nginx\"></a>7. nginx</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8763:80 --name nginx-1 nginx:1.24.0</span><br><span class=\"line\"></span><br><span class=\"line\">curl http://localhost:8763</span><br></pre></td></tr></table></figure>\n<h3 id=\"截圖-1\"><a href=\"#截圖-1\" class=\"headerlink\" title=\"截圖\"></a>截圖</h3><p>成功的截圖(左上)<br><img src=\"https://hackmd.io/_uploads/ByK5FN4yR.png\" alt=\"Termius - ws2.csie.ntu.edu.tw (1) 2024_3_28 下午 08_13_35\"><br><img src=\"https://hackmd.io/_uploads/BJRC6SEkR.png\" alt=\"image\"></p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p>這邊我使用了一個比較外掛的手段，內網穿透<br>使用工具為 <code>tailscale</code><br><a href=\"https://tailscale.com/\">https://tailscale.com/</a><br>安裝方式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://tailscale.com/install.sh | sh</span><br><span class=\"line\">sudo tailscale up</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://hackmd.io/_uploads/H1GuWrNyA.png\" alt=\"image\"><br>透過內網穿透，避免麻煩的qemu端口轉發，直接對tailscale給的ip當成該機器的localhost就可以在桌機開啟網頁了。</p>\n</div>\n<div style=\"page-break-after:always;\"></div>\n\n<h2 id=\"8\"><a href=\"#8\" class=\"headerlink\" title=\"8\"></a>8</h2><p>以下指令即可進入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it nginx-1 /bin/bash</span><br></pre></td></tr></table></figure>\n\n<p>(左上)<br><img src=\"https://hackmd.io/_uploads/BytfArVJ0.png\" alt=\"image\"></p>\n<h2 id=\"9\"><a href=\"#9\" class=\"headerlink\" title=\"9\"></a>9</h2><p>以下指令即可查看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec nginx-1 cat /etc/nginx/nginx.conf</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>(左上)<br><img src=\"https://hackmd.io/_uploads/HylSCSEJR.png\" alt=\"image\"></p>\n<div style=\"page-break-after:always;\"></div>\n\n<h2 id=\"10\"><a href=\"#10\" class=\"headerlink\" title=\"10\"></a>10</h2><p>在 Dockerfile 中，ENTRYPOINT 和 CMD 是兩個用於設定容器啟動後要執行的指令的指令。它們之間的差異如下：</p>\n<ol>\n<li><p><strong>ENTRYPOINT</strong>：</p>\n<ul>\n<li>定義容器啟動後要執行的可執行文件或指令。</li>\n<li>如果在執行容器時指定了指令，則會覆蓋 ENTRYPOINT 中的任何指令。</li>\n<li>可以將 ENTRYPOINT 視為容器的主要執行程序。</li>\n</ul>\n</li>\n<li><p><strong>CMD</strong>：</p>\n<ul>\n<li>定義在執行容器時要執行的默認指令。</li>\n<li>如果使用者在執行容器時提供了指令，CMD 將被忽略。</li>\n<li>可以將 CMD 視為 ENTRYPOINT 的默認參數。</li>\n</ul>\n</li>\n</ol>\n<p>以下是一個示例 Dockerfile，展示了如何同時使用 ENTRYPOINT 和 CMD：</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> alpine:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定義 ENTRYPOINT，指定一個可執行的 shell 腳本</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"string\">&quot;/bin/sh&quot;</span>, <span class=\"string\">&quot;-c&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定義 CMD，設置默認的參數為一個 echo 指令</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;echo&quot;</span>, <span class=\"string\">&quot;Hello, World!&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n\n<p>在這個 Dockerfile 中，我們使用 Alpine Linux 作為基礎映像。ENTRYPOINT 被設置為 &#x2F;bin&#x2F;sh -c，這意味著我們將在容器啟動後運行的指令解釋為 shell 腳本。CMD 被設置為 [“echo”, “Hello, World!”]，這是一個默認的指令，當使用者沒有提供指令時將被執行。</p>\n<p>當你建立並運行此 Docker 映像時，如果不提供任何指令，容器將啟動並執行默認的 CMD，即輸出 “Hello, World!”。如果你提供了額外的指令。<br>例如，如果你運行以下指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run my-image</span><br></pre></td></tr></table></figure>\n\n<p>這將啟動容器並執行默認的 CMD，結果會輸出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello, World!</span><br></pre></td></tr></table></figure>\n\n<p>但如果你運行以下指令，提供了一個替代的指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run my-image <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Goodbye, World!&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>這將覆蓋默認的 CMD，而是執行提供的指令，結果會輸出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Goodbye, World!</span><br></pre></td></tr></table></figure>\n\n<p>這展示了 CMD 如何提供一個默認指令，而 ENTRYPOINT 則定義了容器啟動後要執行的程序，但這個程序可以在運行時被替換。</p>\n<div style=\"page-break-after:always;\"></div>\n\n<h2 id=\"11\"><a href=\"#11\" class=\"headerlink\" title=\"11.\"></a>11.</h2><p>Docker Compose 是一個用於定義和運行多個 Docker 容器應用程序的工具。它允許使用者使用 YAML 文件定義應用程式的服務、環境變數、網路設置和卷等資源，並且可以使用單個指令來啟動、停止、管理整個應用程式的生命週期。</p>\n<p>   主要差別：</p>\n<ul>\n<li>Docker 是一個用於建立、部署和執行容器的平台，而 Docker Compose 則是用於定義和管理多個容器應用程式的工具。</li>\n<li>Docker 主要用於單個容器的操作，而 Docker Compose 則用於多個容器之間的聯合操作。</li>\n<li>Docker Compose 可以使用一個 YAML 文件來定義應用程式的配置，包括容器、網路、卷等，而 Docker 需要使用多個指令來操作單個容器。</li>\n</ul>\n<div style=\"page-break-after:always;\"></div>\n\n<h2 id=\"12\"><a href=\"#12\" class=\"headerlink\" title=\"12.\"></a>12.</h2><p>   (a) 在背景啟動所有服務：<br>       <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure><br>       - 此指令會在背景啟動所有在 docker-compose.yml 文件中定義的服務。</p>\n<p>   (b) 暫停所有服務：<br>       <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose pause</span><br></pre></td></tr></table></figure><br>       - 此指令會暫停所有在 docker-compose.yml 文件中定義的服務。</p>\n<p>   (c) 刪除所有服務、network 與 volume：<br>       <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose down --volumes</span><br></pre></td></tr></table></figure><br>       - 此指令會停止並刪除所有在 docker-compose.yml 文件中定義的服務，並同時刪除相關的網路和卷。</p>\n<div style=\"page-break-after:always;\"></div>\n\n<h1 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h1><h2 id=\"13-sl-apline\"><a href=\"#13-sl-apline\" class=\"headerlink\" title=\"13 sl-apline\"></a>13 sl-apline</h2><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> alpine:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apk update &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    apk add --no-cache \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    git \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    make \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    ncurses-dev \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    gcc \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    g++ \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    libc-dev \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    &amp;&amp; <span class=\"built_in\">rm</span> -rf /var/cache/apk/*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> git <span class=\"built_in\">clone</span> https://github.com/mtoyoda/sl.git /sl</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /sl</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> make</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;./sl&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t sl .</span><br><span class=\"line\">docker run --rm -it sl </span><br></pre></td></tr></table></figure>\n<p><img src=\"https://hackmd.io/_uploads/BJsLqE4JR.png\" alt=\"Termius - nasa-hw5-VM 2024_3_28 下午 10_51_38\"></p>\n<div style=\"page-break-after:always;\"></div>\n\n<h2 id=\"14-MySQL-phpadmin-docker-compose\"><a href=\"#14-MySQL-phpadmin-docker-compose\" class=\"headerlink\" title=\"14 MySQL + phpadmin docker compose\"></a>14 MySQL + phpadmin docker compose</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">db:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">mysql:latest</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">41173058h</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"string\">secret</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_DATABASE:</span> <span class=\"string\">my_db</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_PASSWORD:</span> <span class=\"string\">secret</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;6033:3306&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">db_data:/var/lib/mysql</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">networks:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">nasa-net</span></span><br><span class=\"line\">  <span class=\"attr\">phpmyadmin:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">phpmyadmin/phpmyadmin</span></span><br><span class=\"line\">    <span class=\"attr\">links:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">db</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">PMA_HOST:</span> <span class=\"string\">db</span></span><br><span class=\"line\">      <span class=\"attr\">PMA_PORT:</span> <span class=\"number\">3306</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">8888</span><span class=\"string\">:80</span></span><br><span class=\"line\">    <span class=\"attr\">networks:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">nasa-net</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">networks:</span></span><br><span class=\"line\">  <span class=\"attr\">nasa-net:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\">  <span class=\"attr\">db_data:</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br><span class=\"line\">docker-compose down</span><br></pre></td></tr></table></figure>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p>這邊我使用了一個比較外掛的手段，內網穿透<br>使用工具為 <code>tailscale</code><br><a href=\"https://tailscale.com/\">https://tailscale.com/</a><br>安裝方式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://tailscale.com/install.sh | sh</span><br><span class=\"line\">sudo tailscale up</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://hackmd.io/_uploads/H1GuWrNyA.png\" alt=\"image\"><br>透過內網穿透，避免麻煩的qemu端口轉發，直接對tailscale給的ip當成該機器的localhost就可以在桌機開啟網頁了。</p>\n</div>\n<p><img src=\"https://hackmd.io/_uploads/Hyz99E4yR.png\" alt=\"image\"><br><img src=\"https://hackmd.io/_uploads/HyDc9NNyA.png\" alt=\"image\"></p>\n<div style=\"page-break-after:always;\"></div>\n\n<h2 id=\"15\"><a href=\"#15\" class=\"headerlink\" title=\"15\"></a>15</h2><p><img src=\"https://hackmd.io/_uploads/SJJlxrEy0.png\" alt=\"image\"></p>\n<p>以下是 Kubernetes 的基礎元件、每種節點的角色及其基本元件的說明，以及使用 Kubernetes 的好處：</p>\n<h3 id=\"Kubernetes-基礎元件：\"><a href=\"#Kubernetes-基礎元件：\" class=\"headerlink\" title=\"Kubernetes 基礎元件：\"></a>Kubernetes 基礎元件：</h3><ol>\n<li><p><strong>Master Components (控制平面組件)：</strong></p>\n<ul>\n<li><strong>kube-apiserver</strong>: Kubernetes API 的前端，負責提供 RESTful API 來管理整個 Kubernetes 叢集。</li>\n<li><strong>kube-controller-manager</strong>: 監控控制器，負責監控集群狀態並根據預期狀態進行集群中的操作。</li>\n<li><strong>kube-scheduler</strong>: 負責將 Pod 調度到叢集中的節點上，根據各種條件（如資源需求、策略等）選擇適當的節點。</li>\n</ul>\n</li>\n<li><p><strong>Node Components (工作節點組件)：</strong></p>\n<ul>\n<li><strong>kubelet</strong>: 在每個節點上運行，負責管理容器的生命週期、掛載卷 (Volumes) 和其他與容器相關的任務。</li>\n<li><strong>kube-proxy</strong>: 負責在節點上實現 Kubernetes 服務的代理和負載平衡。</li>\n<li><strong>Container Runtime</strong>: Kubernetes 支援多種容器運行時，如 Docker、containerd 等。</li>\n</ul>\n</li>\n<li><p><strong>etcd</strong>：</p>\n<ul>\n<li>分佈式 key-value 存儲系統，用於存儲 Kubernetes 集群的所有配置數據，包括集群狀態、配置和元數據等。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"叢集中每一種-node-所扮演的角色及其基本元件的作用：\"><a href=\"#叢集中每一種-node-所扮演的角色及其基本元件的作用：\" class=\"headerlink\" title=\"叢集中每一種 node 所扮演的角色及其基本元件的作用：\"></a>叢集中每一種 node 所扮演的角色及其基本元件的作用：</h3><ol>\n<li><p><strong>Master Node</strong>：</p>\n<ul>\n<li>主要負責叢集的控制和管理。</li>\n<li>基本元件：kube-apiserver、kube-controller-manager、kube-scheduler、etcd。</li>\n</ul>\n</li>\n<li><p><strong>Worker Node</strong>：</p>\n<ul>\n<li>在叢集中運行應用程序工作負載。</li>\n<li>基本元件：kubelet、kube-proxy、Container Runtime。</li>\n</ul>\n</li>\n<li><p><strong>Pod</strong>：</p>\n<ul>\n<li><p>定義：Pod 是 Kubernetes 中最小的可部署單位，它可以包含一個或多個容器，這些容器共享同一個網絡命名空間、IP 地址和資源。</p>\n</li>\n<li><p>特點：</p>\n<ul>\n<li>共享網絡命名空間：Pod 中的容器共享同一個網絡命名空間，它們可以通過 localhost 直接相互通信。</li>\n<li>共享存儲：Pod 中的容器可以共享存儲卷 (Volumes)，這使得它們可以在同一個 Pod 內共享數據。</li>\n<li>單獨調度：Pod 作為調度的基本單元，通常會被一起部署到同一個節點上，但 Kubernetes 也支援將不同的 Pod 調度到不同的節點上。</li>\n</ul>\n</li>\n<li><p>角色：</p>\n<ul>\n<li>在叢集中的節點上運行，Pod 中的容器共享同一個節點的資源和環境。</li>\n</ul>\n</li>\n<li><p>目的：</p>\n<ul>\n<li>提供一個單元化的調度和管理單位，方便應用程序的部署、管理和擴展。</li>\n<li>在 Kubernetes 中，Pod 是最基本的部署單元，用於包裝應用程序的相關容器並管理它們的生命週期。每個節點可以運行多個 Pod，這些 Pod 可以包含不同的應用程序或服務，通過 Kubernetes 的調度和管理，實現高效的資源利用和服務部署。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"使用-Kubernetes-的好處：\"><a href=\"#使用-Kubernetes-的好處：\" class=\"headerlink\" title=\"使用 Kubernetes 的好處：\"></a>使用 Kubernetes 的好處：</h3><ol>\n<li><strong>自動部署和擴展</strong>：Kubernetes 可以自動部署和擴展應用程序，根據負載和需求動態調整資源。</li>\n<li><strong>高可用性</strong>：Kubernetes 提供了高可用性的服務，並能夠自動恢復節點或應用程序失敗。</li>\n<li><strong>容錯性</strong>：Kubernetes 具有容錯機制，可以應對節點或應用程序失敗，確保服務持續可用。</li>\n<li><strong>彈性伸縮</strong>：Kubernetes 允許彈性伸縮，根據需求動態調整容器實例的數量，以確保資源的有效利用。</li>\n<li><strong>服務發現和負載平衡</strong>：Kubernetes 提供了內建的服務發現和負載平衡功能，可以輕鬆地將流量分發到不同的容器實例中。</li>\n<li><strong>容器管理</strong>：Kubernetes 提供了豐富的容器管理功能，包括生命周期管理、資源管理、存儲管理等，使容器化應用程序更易於管理和操作。</li>\n</ol>\n<div style=\"page-break-after:always;\"></div>\n\n<h2 id=\"16-final\"><a href=\"#16-final\" class=\"headerlink\" title=\"16 final\"></a>16 final</h2><div class=\"custom-quote danger\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M19.76 5.23C15.84 5.23 12 2 12 2C12 2 8.15996 5.23 4.23996 5.23C4.23996 5.23 1.86996 16.99 12 22C22.13 16.99 19.76 5.23 19.76 5.23Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 16H12\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p>以下有不少失敗案例，我會一列舉<br>最後有成功部屬服務，不過未完成所有要求，希望能給我部分分數<br>:::<br>:::info</p>\n<p>建立VM空間</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qemu-img create -f qcow2 -o cluster_size=2M ubuntu2.qcow2 20G</span><br></pre></td></tr></table></figure>\n<p>建立VM</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virt-install \\</span><br><span class=\"line\">--name=G36VM02 \\</span><br><span class=\"line\">--vcpus=4 \\</span><br><span class=\"line\">--memory=8192 \\</span><br><span class=\"line\">--disk path=/tmp2/41173058h/nasahw5/ubuntu2.qcow2,size=20 \\</span><br><span class=\"line\">--cdrom=ubuntu.iso \\</span><br><span class=\"line\">--os-variant=ubuntu20.04 \\</span><br><span class=\"line\">--network=default \\</span><br><span class=\"line\">--console pty,target_type=serial \\</span><br><span class=\"line\">--graphics vnc,listen=0.0.0.0,password=0910  \\</span><br><span class=\"line\">--noautoconsole</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>設定 port fwd</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virsh qemu-monitor-command --hmp G36VM02 &#x27;hostfwd_add ::3600-:22&#x27;</span><br></pre></td></tr></table></figure>\n<p>:::<br>:::warning</p>\n<h3 id=\"失敗手段一\"><a href=\"#失敗手段一\" class=\"headerlink\" title=\"失敗手段一\"></a>失敗手段一</h3><p>使用 docker-compose 後<br>再使用自動化YAML configuration file 部署工具:<br>Translate a Docker Compose File to Kubernetes Resources</p>\n<p><a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/translate-compose-kubernetes/\">https://kubernetes.io/docs/tasks/configure-pod-container/translate-compose-kubernetes/</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.7&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">nginx:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">nginx:latest</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">nginx-41173058h</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;8888:80&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./nginx/conf.d:/etc/nginx/conf.d</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./nginx/html:/usr/share/nginx/html</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">php</span></span><br><span class=\"line\">  <span class=\"attr\">php:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">php:7-fpm</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">php-41173058h</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./php:/var/www/html</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;7070:80&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">mysql</span></span><br><span class=\"line\">  <span class=\"attr\">mysql:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">mysql:5.7</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">mysql-41173058h</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">MYSQL_ROOT_PASSWORD=password</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">db_data:/var/lib/mysql</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;6033:3306&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">phpmyadmin:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">phpmyadmin/phpmyadmin</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">phpmyadmin-41173058h</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;8080:80&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">mysql</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">PMA_HOST:</span> <span class=\"string\">db</span></span><br><span class=\"line\">      <span class=\"attr\">PMA_PORT:</span> <span class=\"number\">3306</span></span><br><span class=\"line\">      <span class=\"attr\">PMA_ARBITRARY:</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\">  <span class=\"attr\">db_data:</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>:::<br>失敗原因<br>沒辦法對 Volume Type 進行自動建立 hostPath,local volume type</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Volume mount on the host &quot;/home/g36maid/juejin/nginx/conf.d&quot; isn&#x27;t supported</span><br><span class=\"line\">Volume mount on the host &quot;/home/g36maid/juejin/nginx/html&quot; isn&#x27;t supported</span><br><span class=\"line\">Volume mount on the host &quot;/home/g36maid/juejin/php&quot; isn&#x27;t supported</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>:::warning</p>\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><p>透過 helm chart 全自動部屬 k8s 與 docker</p>\n<p> Helm 是一個管理 Kubernetes 應用程式的套件，透過 Helm Charts 這套系統，可以幫助開發者打包，安裝，升級相關的 Kubernetes 應用程式。</p>\n<p>此外， Helm Charts 本身也被設計得很容易去創造，版本控制，分享以及發佈，所以透過 Helm Charts 就可以避免到處 Copy-and-Paste 各式各樣的 Yaml。</p>\n<p><a href=\"https://artifacthub.io/packages/helm/bitnami/phpmyadmin\">https://artifacthub.io/packages/helm/bitnami/phpmyadmin</a><br><a href=\"https://artifacthub.io/packages/helm/bitnami/mysql\">https://artifacthub.io/packages/helm/bitnami/mysql</a></p>\n<p>有成功部屬 MySQL + phpmyadmin 的完整服務<br>且都建立在 minikube 的 service 均須接上你所部署的 deployment (因為helm chart把兩者包起來了)</p>\n<p>部屬成功檔案在這<br>當然內部還有其他髒亂檔案</p>\n<p><a href=\"https://drive.google.com/file/d/1P98vj0DRpbPweCjaczu7Z6ub2KjafaG9/view?usp=sharing\">https://drive.google.com/file/d/1P98vj0DRpbPweCjaczu7Z6ub2KjafaG9/view?usp=sharing</a><br>:::<br>:::warning</p>\n<h3 id=\"方法三-修改以成功部屬的服務來完成需求\"><a href=\"#方法三-修改以成功部屬的服務來完成需求\" class=\"headerlink\" title=\"方法三 修改以成功部屬的服務來完成需求\"></a>方法三 修改以成功部屬的服務來完成需求</h3><p>對docker-compose.yml進行修改</p>\n<p>基礎來源是這個<br><a href=\"https://github.com/nanoninja/docker-nginx-php-mysql\">https://github.com/nanoninja/docker-nginx-php-mysql</a><br>首先<br><code>git clone https://github.com/nanoninja/docker-nginx-php-mysql.git</code><br><code>cd docker-nginx-php-mysql</code></p>\n<h3 id=\"Project-tree\"><a href=\"#Project-tree\" class=\"headerlink\" title=\"Project tree\"></a>Project tree</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── Makefile</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── data</span><br><span class=\"line\">│   └── db</span><br><span class=\"line\">│       ├── dumps</span><br><span class=\"line\">│       └── mysql</span><br><span class=\"line\">├── doc</span><br><span class=\"line\">├── docker-compose.yml</span><br><span class=\"line\">├── etc</span><br><span class=\"line\">│   ├── nginx</span><br><span class=\"line\">│   │   ├── default.conf</span><br><span class=\"line\">│   │   └── default.template.conf</span><br><span class=\"line\">│   ├── php</span><br><span class=\"line\">│   │   └── php.ini</span><br><span class=\"line\">│   └── ssl</span><br><span class=\"line\">└── web</span><br><span class=\"line\">    ├── app</span><br><span class=\"line\">    │   ├── composer.json.dist</span><br><span class=\"line\">    │   ├── phpunit.xml.dist</span><br><span class=\"line\">    │   ├── src</span><br><span class=\"line\">    │   │   └── Foo.php</span><br><span class=\"line\">    │   └── test</span><br><span class=\"line\">    │       ├── FooTest.php</span><br><span class=\"line\">    │       └── bootstrap.php</span><br><span class=\"line\">    └── public</span><br><span class=\"line\">        └── index.php</span><br></pre></td></tr></table></figure>\n<p>修改以下檔案為:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &#x27;3&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">    web:</span><br><span class=\"line\">        image: nginx:alpine</span><br><span class=\"line\">        container_name: nginx-41173058h</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - &quot;./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf&quot;</span><br><span class=\"line\">            - &quot;./etc/ssl:/etc/ssl&quot;</span><br><span class=\"line\">            - &quot;./web:/var/www/html&quot;</span><br><span class=\"line\">            - &quot;./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template&quot;</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">            - &quot;8888:80&quot;</span><br><span class=\"line\">            - &quot;3000:443&quot;</span><br><span class=\"line\">        environment:</span><br><span class=\"line\">            - NGINX_HOST=$&#123;NGINX_HOST&#125;</span><br><span class=\"line\">        command: /bin/sh -c &quot;envsubst &#x27;$$NGINX_HOST&#x27; &lt; /etc/nginx/conf.d/default.template &gt; /etc/nginx/conf.d/default.conf &amp;&amp; nginx -g &#x27;daemon off;&#x27;&quot;</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        depends_on:</span><br><span class=\"line\">            - php</span><br><span class=\"line\">            - mysqldb</span><br><span class=\"line\">    php:</span><br><span class=\"line\">        image: nanoninja/php-fpm:8.1</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - &quot;./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini&quot;</span><br><span class=\"line\">            - &quot;./web:/var/www/html&quot;</span><br><span class=\"line\">    composer:</span><br><span class=\"line\">        image: &quot;composer&quot;</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - &quot;./web/app:/app&quot;</span><br><span class=\"line\">        command: install</span><br><span class=\"line\">    myadmin:</span><br><span class=\"line\">        image: phpmyadmin/phpmyadmin</span><br><span class=\"line\">        container_name: phpmyadmin-41173058h</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">            - &quot;8080:80&quot;</span><br><span class=\"line\">        environment:</span><br><span class=\"line\">            - PMA_ARBITRARY=1</span><br><span class=\"line\">            - PMA_HOST=$&#123;MYSQL_HOST&#125;</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        depends_on:</span><br><span class=\"line\">            - mysqldb</span><br><span class=\"line\">    mysqldb:</span><br><span class=\"line\">        image: mysql:$&#123;MYSQL_VERSION&#125;</span><br><span class=\"line\">        container_name: mysql-41173058h</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        env_file:</span><br><span class=\"line\">            - &quot;.env&quot;</span><br><span class=\"line\">        environment:</span><br><span class=\"line\">            - MYSQL_DATABASE=$&#123;MYSQL_DATABASE&#125;</span><br><span class=\"line\">            - MYSQL_ROOT_PASSWORD=$&#123;MYSQL_ROOT_PASSWORD&#125;</span><br><span class=\"line\">            - MYSQL_USER=$&#123;MYSQL_USER&#125;</span><br><span class=\"line\">            - MYSQL_PASSWORD=$&#123;MYSQL_PASSWORD&#125;</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">            - &quot;8989:3306&quot;</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - &quot;./data/db/mysql:/var/lib/mysql&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp web/app/composer.json.dist web/app/composer.json</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose logs -f # Follow log output</span><br></pre></td></tr></table></figure>\n\n<p>一樣使用內網穿透<br>使用工具為 <code>tailscale</code><br><a href=\"https://tailscale.com/\">https://tailscale.com/</a><br>安裝方式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://tailscale.com/install.sh | sh</span><br><span class=\"line\">sudo tailscale up</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://hackmd.io/_uploads/H1GuWrNyA.png\" alt=\"image\"><br>透過內網穿透，避免麻煩的qemu端口轉發，直接對tailscale給的ip當成該機器的localhost就可以在桌機開啟網頁了。</p>\n<p><img src=\"https://hackmd.io/_uploads/HJ5jqN4y0.png\" alt=\"image\"><br><img src=\"https://hackmd.io/_uploads/H1x25ENJ0.png\" alt=\"image\"></p>\n<p>成功開啟三個服務與網頁</p>\n</div>\n","text":"NASA hw5info學號: 41173058h學生: 鍾詠傑 References Lab 5Slides: https://docs.google.com...","permalink":"/post/NASA-05","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[],"tags":[{"name":"NASA","slug":"NASA","count":8,"path":"api/tags/NASA.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#NASA-hw5\"><span class=\"toc-text\">NASA hw5</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#info\"><span class=\"toc-text\">info</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#References\"><span class=\"toc-text\">References</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Examples\"><span class=\"toc-text\">Examples</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Virsh\"><span class=\"toc-text\">Virsh</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%9DVM\"><span class=\"toc-text\">1 安裝VM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%96%E7%89%87\"><span class=\"toc-text\">圖片</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E9%96%8B%E5%95%9F-serial-console-%E8%88%87-ssh\"><span class=\"toc-text\">2 開啟 serial console 與 ssh</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ssh\"><span class=\"toc-text\">ssh</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#docker\"><span class=\"toc-text\">docker</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-Docker-Set-Up\"><span class=\"toc-text\">3. Docker Set Up</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%AA%E5%9C%96\"><span class=\"toc-text\">截圖</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Docker-Basics\"><span class=\"toc-text\">Docker Basics</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E4%BD%BF%E7%94%A8-Container-%E7%9A%84%E6%99%82%E6%A9%9F%EF%BC%9A\"><span class=\"toc-text\">4. 使用 Container 的時機：</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5\"><span class=\"toc-text\">5.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6\"><span class=\"toc-text\">6.</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-nginx\"><span class=\"toc-text\">7. nginx</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%AA%E5%9C%96-1\"><span class=\"toc-text\">截圖</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8\"><span class=\"toc-text\">8</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9\"><span class=\"toc-text\">9</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10\"><span class=\"toc-text\">10</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11\"><span class=\"toc-text\">11.</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12\"><span class=\"toc-text\">12.</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Application\"><span class=\"toc-text\">Application</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-sl-apline\"><span class=\"toc-text\">13 sl-apline</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#14-MySQL-phpadmin-docker-compose\"><span class=\"toc-text\">14 MySQL + phpadmin docker compose</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#15\"><span class=\"toc-text\">15</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Kubernetes-%E5%9F%BA%E7%A4%8E%E5%85%83%E4%BB%B6%EF%BC%9A\"><span class=\"toc-text\">Kubernetes 基礎元件：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%A2%E9%9B%86%E4%B8%AD%E6%AF%8F%E4%B8%80%E7%A8%AE-node-%E6%89%80%E6%89%AE%E6%BC%94%E7%9A%84%E8%A7%92%E8%89%B2%E5%8F%8A%E5%85%B6%E5%9F%BA%E6%9C%AC%E5%85%83%E4%BB%B6%E7%9A%84%E4%BD%9C%E7%94%A8%EF%BC%9A\"><span class=\"toc-text\">叢集中每一種 node 所扮演的角色及其基本元件的作用：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-Kubernetes-%E7%9A%84%E5%A5%BD%E8%99%95%EF%BC%9A\"><span class=\"toc-text\">使用 Kubernetes 的好處：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#16-final\"><span class=\"toc-text\">16 final</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%B1%E6%95%97%E6%89%8B%E6%AE%B5%E4%B8%80\"><span class=\"toc-text\">失敗手段一</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">方法二</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%89-%E4%BF%AE%E6%94%B9%E4%BB%A5%E6%88%90%E5%8A%9F%E9%83%A8%E5%B1%AC%E7%9A%84%E6%9C%8D%E5%8B%99%E4%BE%86%E5%AE%8C%E6%88%90%E9%9C%80%E6%B1%82\"><span class=\"toc-text\">方法三 修改以成功部屬的服務來完成需求</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Project-tree\"><span class=\"toc-text\">Project tree</span></a></li></ol></li></ol></li></ol>","author":{"name":"G36maid","slug":"blog-author","avatar":"https://i.imgur.com/iNUcO0p.jpg","link":"/","description":"","socials":{"github":"https://github.com/G36maid","twitter":"https://twitter.com/SjLwrO14y68R3Dw","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"NASA-06","uid":"c676bba4b03a11a9a2c7a205c7e8caf9","slug":"NASA-06","date":"2024-03-24T16:00:00.000Z","updated":"2024-04-17T09:35:15.024Z","comments":true,"path":"api/articles/NASA-06.json","keywords":null,"cover":[],"text":"NASA Hw06 OPNSense41173058h鍾詠傑 refOPNsence防火牆manual opnsense-vs-pfsense lab6 mac...","permalink":"/post/NASA-06","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"NASA","slug":"NASA","count":8,"path":"api/tags/NASA.json"}],"author":{"name":"G36maid","slug":"blog-author","avatar":"https://i.imgur.com/iNUcO0p.jpg","link":"/","description":"","socials":{"github":"https://github.com/G36maid","twitter":"https://twitter.com/SjLwrO14y68R3Dw","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"NASA-04","uid":"e0230616a66570d701934c98e3ecd1c8","slug":"NASA-04","date":"2024-03-10T16:00:00.000Z","updated":"2024-04-17T09:34:59.814Z","comments":true,"path":"api/articles/NASA-04.json","keywords":null,"cover":[],"text":"NASA HW 04學生鍾詠傑學號41173058H 1. 迷星叫1.在 Cisco Switch 上我們可以指定一個埠口為 Access Port 或者 Tr...","permalink":"/post/NASA-04","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"NASA","slug":"NASA","count":8,"path":"api/tags/NASA.json"}],"author":{"name":"G36maid","slug":"blog-author","avatar":"https://i.imgur.com/iNUcO0p.jpg","link":"/","description":"","socials":{"github":"https://github.com/G36maid","twitter":"https://twitter.com/SjLwrO14y68R3Dw","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}